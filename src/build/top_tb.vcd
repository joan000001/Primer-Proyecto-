$date
	Thu Apr 03 15:04:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 7 ! led [6:0] $end
$var reg 7 " dataRaw [6:0] $end
$var reg 4 # in [3:0] $end
$var reg 1 $ selector $end
$scope module uut $end
$var wire 7 % dataRaw [6:0] $end
$var wire 4 & in [3:0] $end
$var wire 1 $ selector $end
$var wire 7 ' segments [6:0] $end
$var wire 3 ( posError [2:0] $end
$var wire 7 ) led [6:0] $end
$var wire 7 * dataRaw_muxed [6:0] $end
$var wire 7 + dataRaw_from_encoder [6:0] $end
$var wire 7 , dataCorregido [6:0] $end
$var wire 4 - dataCorrecta [3:0] $end
$scope module corrector $end
$var wire 7 . dataRaw [6:0] $end
$var wire 3 / sindrome [2:0] $end
$var reg 7 0 correccion [6:0] $end
$var reg 4 1 dataCorrecta [3:0] $end
$upscope $end
$scope module detector $end
$var wire 7 2 dataRaw [6:0] $end
$var reg 3 3 posError [2:0] $end
$upscope $end
$scope module display $end
$var wire 7 4 coregido [6:0] $end
$var reg 7 5 led [6:0] $end
$upscope $end
$scope module display_hex $end
$var wire 4 6 bcd [3:0] $end
$var reg 7 7 segments [6:0] $end
$upscope $end
$scope module encoder $end
$var wire 4 8 in [3:0] $end
$var reg 1 9 d3 $end
$var reg 1 : d5 $end
$var reg 1 ; d6 $end
$var reg 1 < d7 $end
$var reg 7 = ou [6:0] $end
$var reg 1 > p1 $end
$var reg 1 ? p2 $end
$var reg 1 @ p4 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0@
1?
0>
b1010010 =
1<
0;
1:
09
b1010 8
b1000 7
b1010 6
b101101 5
b1010010 4
b0 3
b1010010 2
b1010 1
b1010010 0
b0 /
b1010010 .
b1010 -
b1010010 ,
b1010010 +
b1010010 *
b101101 )
b0 (
b1000 '
b1010 &
bx %
0$
b1010 #
bx "
b101101 !
$end
#10000
b1000000 '
b1000000 7
b1111111 !
b1111111 )
b1111111 5
b0 -
b0 1
b0 6
b0 ,
b0 0
b0 4
b1 (
b1 /
b1 3
b1 *
b1 .
b1 2
b1 "
b1 %
1$
#20000
b100001 '
b100001 7
b11001 !
b11001 )
b11001 5
b1101 -
b1101 1
b1101 6
b1100110 ,
b1100110 0
b1100110 4
b0 (
b0 /
b0 3
b1100110 *
b1100110 .
b1100110 2
b1100110 +
b1100110 =
19
0:
1;
0$
b1101 #
b1101 &
b1101 8
#30000
b1110 '
b1110 7
b0 !
b0 )
b0 5
b1111 -
b1111 1
b1111 6
b1111111 ,
b1111111 0
b1111111 4
b1 (
b1 /
b1 3
b1111110 *
b1111110 .
b1111110 2
1$
b1111110 "
b1111110 %
#40000
